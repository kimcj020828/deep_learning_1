'''
# 수치미분(numerical differentiation): 아주 작은 차분으로 미분하는 것을 수치미분이라 함.
# 해석적 미분(analytic differentiation): 수식을 전개하여 미분 (dy/dx)
# 아래의 수치미분은 에러를 야기하는 방정식이다.
def numerical_diff(f,x):    
    # 이 수는 반올림 오차(rounding error)를 야기한다. ! 소수점 8자리 이하는 생략되어 계산이 됨.
    h = 1e-50 
    # 오차 반올림을 회피하기 위한 초기값
    h = 1e-4
    return (f(x+h)+f(x))/h
'''

'''
(f(x+h)+f(x))/h 의 방정식도 결국 진정한 의미의 접점에서의 기울기는 아니다.
'x+h'와 'x'사이에는 무수히 많은 점들이 있기 때문이다.
따라서, 오차를 줄이기 위해 'x+h'와 'x-h'의 차분을 계산하는 방법을 사용하기도 한다.
위 차분은 x를 중심으로 그 전후의 차분을 계산한다는 의미에서 **중심차분 혹은 중앙 차분이라 한다.
! 'x+h'와 'x'의 차분을 전방차분이라 한다.
'''

# 개선한 수치미분
def numerical_diff(f,x):
    h = 1e-4 # 0.0001
    return (f(x+h) - f(x-h)) / (2*h)

